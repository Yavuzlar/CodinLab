package main

#imports

#funcs

#tests

func main() {

 for _, test := range tests {

    inputs := make([]reflect.Value, len(test.input))
    for i, v := range test.input {
      inputs[i] = reflect.ValueOf(v)
    }
    
    funcCall := reflect.ValueOf(#funccall)
      var results []reflect.Value
      if len(inputs) == 0 {
          results = funcCall.Call(nil)
      }else{
          results = funcCall.Call(inputs)
      }
      
    
    result := make([]interface{}, len(results))
    for i, r := range results {
      result[i] = r.Interface() 
    }

    if len(test.output) != len(result) {
      fmt.Println("Error: Output length mismatch")
      return
    }

    for j := range test.output {
      if result[j] != test.output[j] {
        fmt.Printf("%v~%v\n", test.output[j], result[j])
        return
      }
    }
  }
  fmt.Println("All tests passed")
}