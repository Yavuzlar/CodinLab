{
    "id": 6,
    "languages": [
        {
            "lang": "en",
            "title": "Loops in Python",
            "description": "Learn how to use for, while, and do-while (simulated) loops in Python to repeat a block of code multiple times.",
            "content": "Write a Python program that prints numbers from 1 to 10 using a for loop. In this task, you will use the for loop to repeat a block of code multiple times. The loop will start from 1 and continue until it reaches 10. Print each number on a new line.",
            "note": "1. for loop: A for loop is used when you know beforehand how many times you want to repeat a block of code. The syntax is: for variable in range(start, stop): # code to be executed. It iterates over a sequence.\n\n2. while loop: A while loop repeats a block of code as long as the given condition is true. The syntax is: while condition: # code to be executed. It checks the condition before each iteration.\n\n3. Simulated do-while loop: Python does not have a built-in do-while loop, but it can be simulated using a while loop and a break statement. Example:\npython\nwhile True:\n    # code to be executed\n    if not condition:\n        break\n"
        },
        {
            "lang": "tr",
            "title": "Python'da Döngüler",
            "description": "Python dilinde bir kod bloğunu birden çok kez tekrarlamak için for, while ve do-while (simüle edilmiş) döngülerini kullanmayı öğrenin.",
            "content": "1'den 10'a kadar olan sayıları bir for döngüsü kullanarak yazdıran bir Python programı yazın. Bu soruda, for döngüsünü kullanarak bir kod bloğunu birkaç kez tekrarlayacaksınız. Döngü, 1'den başlayıp 10'a kadar devam edecek ve her sayıyı yeni bir satıra yazdıracaktır.",
            "note": "1. for döngüsü: for döngüsü, bir kod bloğunu kaç kez tekrar edeceğinizi önceden bildiğinizde kullanılır. Sözdizimi şu şekildedir: for değişken in range(başlangıç, bitiş): # çalıştırılacak kod. Bir diziyi yinelemek için kullanılır.\n\n2. while döngüsü: while döngüsü, koşul doğru olduğu sürece bir kod bloğunu tekrarlar. Sözdizimi: while koşul: # çalıştırılacak kod. Döngü, her yinelemeden önce koşulu kontrol eder.\n\n3. Simüle edilmiş do-while döngüsü: Python'da yerleşik bir do-while döngüsü yoktur, ancak bir while döngüsü ve break ifadesi kullanılarak simüle edilebilir. Örnek:\npython\nwhile True:\n    # çalıştırılacak kod\n    if not koşul:\n        break\n"
        }
    ],
    "quest": {
        "difficulty": 2,
        "funcName": "",
        "tests": [
            {
                "input": [],
                "output": [
                    "1\n2\n3\n4\n5\n6\n7\n8\n9\n10"
                ]
            }
        ],
        "codeTemplates": [
            {
                "programmingID": 3,
                "templatePath": "object/paths/python/6/template.txt"
            }
        ]
    }
}