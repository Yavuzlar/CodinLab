{
	"id": 4,
	"languages": [
		{
			"lang": "en",
			"title": "Control Structures",
			"description": "Master Go's control structures such as if-else statements.",
			"content": "Control structures allow you to control the flow of your program. In this task, you'll learn to use the if-else statement to make decisions based on conditions. This is one of the fundamental concepts for writing dynamic programs.",
			"note": "1. Define a function called checkEvenOdd that takes an integer as input.\n\n2. Use an if-else statement to determine if the number is even or odd. Print 'Even' if the number is even and 'Odd' if it's odd.Example usage:\n if a > b {\n return a\n}else{\n return b\n}\n\n3. if block executes if the given condition is true. The else block executes if the condition is false."
		},
		{
			"lang": "tr",
			"title": "Kontrol Yapıları",
			"description": "Go'daki if-else yapılarını öğrenin.",
			"content": "Kontrol yapıları, programınızın akışını kontrol etmenizi sağlar. Bu görevde, koşullara bağlı olarak karar vermek için if-else yapısını kullanmayı öğreneceksiniz. Bu, dinamik programlar yazmak için temel bir kavramdır.",
			"note": "1. Bir tamsayı alan checkEvenOdd adlı bir fonksiyon tanımlayın.\n\n2. Sayının çift mi yoksa tek mi olduğunu belirlemek için bir if-else yapısı kullanın. Çift sayı için 'Even', tek sayı için 'Odd' yazdırın.\nÖrnek kullanım:\n if a > b {\n return a\n}else{\n return b\n}\n\n3. If kısmı verilen koşulun doğru olması durumunda çalışır. Else kısmı ise koşulun yanlış olması durumunda çalışır."
		}
	],
	"quest": {
		"difficulty": 2,
		"funcName": "checkEvenOdd",
		"tests": [
			{
				"input": [3],
				"output": ["Odd"]
			},
			{
				"input": [2],
				"output": ["Even"]
			},
			{
				"input": [0],
				"output": ["Even"]
			},
			{
				"input": [-1],
				"output": ["Odd"]
			}
		],
		"codeTemplates": [
			{
				"programmingID": 2,
				"templatePath": "object/paths/golang/4/template.txt"
			}
		]
	}
}
