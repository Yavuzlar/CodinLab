{
    "id": 5,
    "languages": [
        {
            "lang": "en",
            "title": "Loops in JavaScript",
            "description": "Learn to use for, while, and do-while loops in JavaScript to repeat a block of code multiple times.",
            "content": "Write a JavaScript program that prints numbers from 1 to 10 using a for loop. In this task, you will use the for loop to repeat a block of code multiple times. The loop will start from 1 and continue until it reaches 10. Print each number on a new line.\n\n1. for loop: A for loop is used when you know beforehand how many times you want to repeat a block of code. The syntax is: \nfor (initialization; condition; increment) {\n  // code to be executed\n}. It executes the code block as long as the condition is true.\n\n2. while loop: A while loop repeats a block of code as long as the given condition is true. The syntax is: \nwhile (condition) {\n  // code to be executed\n}. It checks the condition before each iteration.\n\n3. do-while loop: A do-while loop is similar to the while loop, but it checks the condition after executing the code block. This means the code will always execute at least once. The syntax is: \ndo {\n  // code to be executed\n} while (condition);",
            "note": "Solution:\nlet x = 1;\nfor (let x = 1; x <= 10; x++) {\n  console.log(x);\n}"
        },
        {
            "lang": "tr",
            "title": "JavaScript'te Döngüler",
            "description": "JavaScript dilinde bir kod bloğunu birden çok kez tekrarlamak için for, while ve do-while döngülerini kullanmayı öğrenin.",
            "content": "1'den 10'a kadar olan sayıları bir for döngüsü kullanarak yazdıran bir JavaScript programı yazın. Bu soruda, for döngüsünü kullanarak bir kod bloğunu birkaç kez tekrarlayacaksınız. Döngü, 1'den başlayıp 10'a kadar devam edecek ve her sayıyı yeni bir satıra yazdıracaktır.\n\n1. for döngüsü: for döngüsü, bir kod bloğunu kaç kez tekrar edeceğinizi önceden bildiğinizde kullanılır. Sözdizimi şu şekildedir: \nfor (başlatma; koşul; artış) {\n  // çalıştırılacak kod\n}. Koşul doğru olduğu sürece kod bloğu çalıştırılır.\n\n2. while döngüsü: while döngüsü, koşul doğru olduğu sürece bir kod bloğunu tekrarlar. Sözdizimi: \nwhile (koşul) {\n  // çalıştırılacak kod\n}. Döngü, her yinelemeden önce koşulu kontrol eder.\n\n3. do-while döngüsü: do-while döngüsü, while döngüsüne benzer, ancak koşulu kod bloğu çalıştırıldıktan sonra kontrol eder. Bu nedenle, kod bloğu en az bir kez çalıştırılır. Sözdizimi: \ndo {\n  // çalıştırılacak kod\n} while (koşul);",
            "note": "Çözüm:\nlet x = 1;\nfor (let x = 1; x <= 10; x++) {\n  console.log(x);\n}"
        }
    ],
    "quest": {
        "difficulty": 2,
        "funcName": "",
        "tests": [
            {
                "input": [],
                "output": [
                    "1\n2\n3\n4\n5\n6\n7\n8\n9\n10"
                ]
            }
        ],
        "codeTemplates": [
            {
                "programmingID": 4,
                "templatePath": "object/paths/js/5/template.txt"
            }
        ]
    }
}