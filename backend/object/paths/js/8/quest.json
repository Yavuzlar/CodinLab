{
    "id": 8,
    "languages": [
        {
            "lang": "en",
            "title": "Functions in JavaScript",
            "description": "Learn how to create and use functions in JavaScript, including the use of parameters and return values.",
            "content": "Create a JavaScript function named `greet` that takes a `name` parameter and logs a greeting message like \"Hello, John!\". If no name is provided, it should log \"Hello, stranger!\". Write and call this function in your code.",
            "note": "1. In JavaScript, functions are created using the `function` keyword.\n2. Functions can have parameters or be without parameters.\n   - A parametric function is one that takes arguments. Example:\n     ```javascript\n     function add(a, b) {\n         return a + b; // Returns the sum of a and b\n     }\n     ```\n   - A non-parametric function does not take any arguments. Example:\n     ```javascript\n     function greet() {\n         console.log('Hello, world!'); // Prints a greeting message\n     }\n     ```\n3. The `return` statement is used to return a value from a function. If no `return` statement is used, the function returns `undefined` by default.\n4. To call a function, use its name followed by parentheses. Example:\n   ```javascript\n   greet(); // Calls the greet function\n   add(5, 3); // Calls the add function with arguments 5 and 3\n   ```"
        },
        {
            "lang": "tr",
            "title": "JavaScript'te Fonksiyonlar",
            "description": "JavaScript'te fonksiyonların nasıl oluşturulacağını ve kullanılacağını öğrenin, parametreler ve dönüş değerleri dahil.",
            "content": "Bir `greet` adlı JavaScript fonksiyonu oluşturun. Bu fonksiyon, bir `name` parametresi almalı ve \"Merhaba, John!\" gibi bir karşılama mesajı yazdırmalıdır. Eğer isim belirtilmezse, \"Merhaba, yabancı!\" yazdırmalıdır. Fonksiyonu kodunuzda yazın ve çağırın.",
            "note": "1. JavaScript'te fonksiyonlar `function` anahtar kelimesi ile oluşturulur.\n2. Fonksiyonlar parametreli olabilir veya parametresiz olabilir.\n   - Parametreli bir fonksiyon, argümanlar alan bir fonksiyondur. Örnek:\n     ```javascript\n     function topla(a, b) {\n         return a + b; // a ve b'nin toplamını döner\n     }\n     ```\n   - Parametresiz bir fonksiyon, herhangi bir argüman almaz. Örnek:\n     ```javascript\n     function selamla() {\n         console.log('Merhaba, dünya!'); // Selamlama mesajı yazdırır\n     }\n     ```\n3. `return` ifadesi, bir değeri fonksiyondan döndürmek için kullanılır. Eğer `return` kullanılmazsa, fonksiyon varsayılan olarak `undefined` döner.\n4. Bir fonksiyonu çağırmak için ismini ve parantezleri kullanın. Örnek:\n   ```javascript\n   selamla(); // selamla fonksiyonunu çağırır\n   topla(5, 3); // 5 ve 3 argümanlarıyla topla fonksiyonunu çağırır\n   ```"
        }
    ],
    "quest": {
        "difficulty": 1,
        "funcName": "",
        "tests": [
            {
                "input": [],
                "output": []
            }
        ],
        "codeTemplates": [
            {
                "programmingID": 4,
                "templatePath": "object/paths/js/8/template.txt"
            }
        ]
    }
}