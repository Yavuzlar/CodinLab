basePath: /api/v1
definitions:
  private.LanguageDTO:
    properties:
      content:
        type: string
      description:
        type: string
      lang:
        type: string
      note:
        type: string
      title:
        type: string
    type: object
  private.LogDTO:
    properties:
      content:
        type: string
      id:
        type: string
      labRoadID:
        type: integer
      languageID:
        type: integer
      type:
        type: string
      userId:
        type: string
    type: object
  private.PathDTO:
    properties:
      difficulty:
        type: integer
      id:
        type: integer
      isFinished:
        type: boolean
      isStarted:
        type: boolean
      languages:
        items:
          $ref: '#/definitions/private.LanguageDTO'
        type: array
      name:
        type: string
    type: object
  private.RoadDTO:
    properties:
      iconPath:
        type: string
      name:
        type: string
      paths:
        items:
          $ref: '#/definitions/private.PathDTO'
        type: array
    type: object
  private.StartDTO:
    properties:
      languageID:
        type: integer
    required:
    - languageID
    type: object
  private.UpdateUserDTO:
    properties:
      githubProfile:
        maxLength: 30
        type: string
      name:
        type: string
      newPassword:
        minLength: 8
        type: string
      password:
        type: string
      surname:
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - password
    type: object
  private.UserDTO:
    properties:
      bestLanguage:
        type: string
      githubProfile:
        type: string
      name:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  public.LoginDTO:
    properties:
      password:
        description: Password is required and must be at least 8 characters
        minLength: 8
        type: string
      username:
        description: Username is required, must be alphanumeric and between 3-30 characters
        maxLength: 30
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  public.RegisterDTO:
    properties:
      githubProfile:
        description: Github Profile is must be max 30 characters long.
        maxLength: 30
        type: string
      name:
        description: Name is required
        type: string
      password:
        description: Password is required and must be at least 8 characters
        minLength: 8
        type: string
      surname:
        description: Surname is required
        type: string
      username:
        description: Username is required, must be alphanumeric and between 3-30 characters
        maxLength: 30
        minLength: 3
        type: string
    required:
    - name
    - password
    - surname
    - username
    type: object
  response.BaseResponse:
    properties:
      data: {}
      data_count:
        type: integer
      errors: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Service for CodinLab
  title: API Service
  version: v1
paths:
  /private/home/advancement:
    get:
      consumes:
      - application/json
      description: Get User Advancement
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetUserAdvancement
      tags:
      - Home
  /private/home/development:
    get:
      consumes:
      - application/json
      description: Get User Development
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetUserDevelopment
      tags:
      - Home
  /private/home/inventories:
    get:
      consumes:
      - application/json
      description: Get Inventories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetInventories
      tags:
      - Home
  /private/home/lab:
    get:
      consumes:
      - application/json
      description: Get Lab Content
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetLabContent
      tags:
      - Home
  /private/home/level:
    get:
      consumes:
      - application/json
      description: Get User Level
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetUserLevel
      tags:
      - Home
  /private/home/road:
    get:
      consumes:
      - application/json
      description: Get Road Content
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetRoadContent
      tags:
      - Home
  /private/home/welcome:
    get:
      consumes:
      - application/json
      description: Get Welcome Content
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetWelcomeContent
      tags:
      - Home
  /private/lab/{langId}/{labId}:
    get:
      consumes:
      - application/json
      description: Get Lab By Lang ID & Lab ID
      parameters:
      - description: Lang ID
        in: path
        name: langId
        required: true
        type: string
      - description: Lab ID
        in: path
        name: labId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetLabById
      tags:
      - Lab
  /private/labs/{id}:
    get:
      consumes:
      - application/json
      description: Get Labs By Lang ID
      parameters:
      - description: Labs ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: GetLabsById
      tags:
      - Lab
  /private/log:
    get:
      consumes:
      - application/json
      description: Retrieves all logs based on the provided query parameters.
      parameters:
      - description: User ID
        in: query
        name: userID
        type: string
      - description: Language ID
        in: query
        name: languageID
        type: integer
      - description: Log Lab or Path ID
        in: query
        name: labRoadID
        type: integer
      - description: Log Content
        in: query
        name: content
        type: string
      - description: Log Type
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/private.LogDTO'
                  type: array
              type: object
      summary: Get all logs
      tags:
      - Log
  /private/road/{roadId}:
    get:
      consumes:
      - application/json
      description: Get All Roads
      parameters:
      - description: roadId
        in: path
        name: roadId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/private.RoadDTO'
              type: object
      summary: GetRoads
      tags:
      - Road
  /private/road/{roadId}/{pathId}:
    get:
      consumes:
      - application/json
      description: Get Path By ID
      parameters:
      - description: Road ID
        in: path
        name: roadId
        required: true
        type: string
      - description: Path ID
        in: path
        name: pathId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/private.PathDTO'
              type: object
      summary: GetPathById
      tags:
      - Road
  /private/road/start:
    post:
      consumes:
      - application/json
      description: Start
      parameters:
      - description: Start
        in: body
        name: start
        required: true
        schema:
          $ref: '#/definitions/private.StartDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Start
      tags:
      - Road
  /private/user/:
    get:
      consumes:
      - application/json
      description: Gets users profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/private.UserDTO'
              type: object
      summary: GetProfile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates user
      parameters:
      - description: UpdateUser
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/private.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: UpdateUser
      tags:
      - User
  /public/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/public.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Login
      tags:
      - Auth
  /public/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/public.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Register
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: session_id
    type: apiKey
swagger: "2.0"
